version: '3.8'

services:
  # NodeOps Application - Production
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: nodeops-app-prod
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      # DATABASE_URL should be provided via .env.production or environment variables
      # - DATABASE_URL=${DATABASE_URL}
    ports:
      - "3000:3000"
    volumes:
      # Only mount logs directory in production
      - ./logs:/app/logs
      - app_cache:/app/.cache
    networks:
      - nodeops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1) })\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  # Optional: Reverse Proxy with SSL (Nginx)
  nginx:
    image: nginx:alpine
    container_name: nodeops-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      app:
        condition: service_healthy
    networks:
      - nodeops-network
    restart: unless-stopped
    profiles:
      - nginx  # Only start with: docker-compose --profile nginx up
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  # Optional: Log aggregation and monitoring
  filebeat:
    image: elastic/filebeat:8.11.0
    container_name: nodeops-filebeat-prod
    user: root
    volumes:
      - ./logs:/var/log/app:ro
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app
    networks:
      - nodeops-network
    restart: unless-stopped
    profiles:
      - monitoring  # Only start with: docker-compose --profile monitoring up

volumes:
  app_cache:
    driver: local
  nginx_cache:
    driver: local

networks:
  nodeops-network:
    driver: bridge
    name: nodeops-prod-network

# Production-specific configurations
configs:
  nginx_config:
    file: ./nginx/nginx.conf
  
secrets:
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  database_url:
    file: ./secrets/database_url.txt