version: '3.8'

services:
  # Neon Local Proxy for Development
  neon-local:
    image: neondatabase/neon:latest
    container_name: nodeops-neon-local
    environment:
      - POSTGRES_DB=nodeops_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    volumes:
      - neon_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nodeops_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - nodeops-network

  # NodeOps Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: nodeops-app-dev
    depends_on:
      neon-local:
        condition: service_healthy
    env_file:
      - .env.development
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@neon-local:5432/nodeops_dev
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for development (hot reload)
      - ./src:/app/src:ro
      - ./logs:/app/logs
    networks:
      - nodeops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Database Administration Tool
  db-admin:
    image: dpage/pgadmin4:latest
    container_name: nodeops-pgadmin-dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@nodeops.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "8080:80"
    depends_on:
      - neon-local
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - nodeops-network
    profiles:
      - tools  # Only start with: docker-compose --profile tools up

volumes:
  neon_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  nodeops-network:
    driver: bridge
    name: nodeops-dev-network