services:
  # Neon Local Proxy for Development
  neon-local:
    image: neondatabase/neon_local:latest
    container_name: nodeops-neon-local
    env_file:
      - .env.development
    ports:
      - "5432:5432"
    volumes:
      - neon_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432", "-U", "neon"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - nodeops-network

  # NodeOps Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: nodeops-app-dev
    depends_on:
      neon-local:
        condition: service_healthy
    env_file:
      - .env.development
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for development (hot reload)
      - ./src:/app/src:ro
      - ./logs:/app/logs
    networks:
      - nodeops-network
    restart: unless-stopped
    stdin_open: true
    tty: true
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "const http = require('http'); const req = http.request({hostname: 'localhost', port: 5173, path: '/health'}, (res) => process.exit(res.statusCode === 200 ? 0 : 1)); req.on('error', () => process.exit(1)); req.end();",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
networks:
  nodeops-network:
    driver: bridge

volumes:
  neon_dev_data:
    driver: local
